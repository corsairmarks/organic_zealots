# fired during empire initialization
# this = country
empire_init_add_technologies = {
	events = {
		civic_organic_zealots.2
	}
}

# fired during empire initialization
# this = planet, capital
# from = species, founder
empire_init_capital_planet = {
	events = {
		civic_organic_zealots.8
	}
}

# fired when a new leader is generated for an empire, to be available for recruitment
# this = country
# from = leader
on_leader_spawned = {
	events = {
		civic_organic_zealots.11
		civic_organic_zealots.12
	}
}

# fired when the ruler is ousted and goes back to their pre-ruler class
# this = country
# from = leader, demoted and already has the new class
on_ruler_back_to_pre_ruler_class = {
	events = {
		civic_organic_zealots.13
	}
}

# fired when a country has increased the level of a tech, use last_increased_tech trigger to check tech and level
# this = country
on_tech_increased = {
	events = {
		civic_organic_zealots.9
		civic_organic_zealots.10
	}
}

# fired when a pop has finished purging
# this = planet
# from = country
# fromfrom = pop
on_pop_purged = {
	events = {
		civic_organic_zealots.3
	}
}

# fired when a country becomes a subject
# this = country, subject
# from = country, overlord
on_becoming_subject = {
	events = {
		civic_organic_zealots.4
		civic_organic_zealots.5
		civic_organic_zealots.6
	}
}

# fired every 10 years
on_decade_pulse = {
	events = {
		civic_organic_zealots.20
	}
}

# fired when a country is created via create_country or create_rebels
# this = country, created
# from = root of context where create_country/create_rebels happens 
on_country_created = {
	events = {
		civic_organic_zealots.30
	}
}

# this = owner of fleet 1 (combatant)
# from = owner of fleet 2 (destroyed)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		civic_organic_zealots.405
	}
}

# this = owner of fleet 1 (destroyed)
# from = owner of fleet 2 (combatant)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		civic_organic_zealots.406
	}
}

# fired when my custom code changes a leader's species.  You might attach an event
# here to handle custom traits in another mod that should be added or removed (or
# converted) based on information about the leader (possibly taking in to account
# things like their owner).
# this = leader, post-modification
# from = species, pre-modification (if known)
on_leader_species_changed = {
	events = {
	}
}

# fired whenever a new owner is set for a planet, be it after a war or through a trade
# this = planet
# from = country, new owner
# fromfrom = country, former owner (if any)
on_planet_transfer = {
	events = {
		civic_organic_zealots.40
	}
}

# fired whenever a planet becomes ownerless
# this = planet
# from = country (invalid scope, since no new owner)
# fromfrom = country, former owner
on_planet_ownerless = {
	events = {
		civic_organic_zealots.40
	}
}