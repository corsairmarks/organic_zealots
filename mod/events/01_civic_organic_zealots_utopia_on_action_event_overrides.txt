namespace = utopia

# Modified:
# * do no convert already-existing synthetics into the changed species
# * fire the Organic Zealots "we hate you now and sever diplomatic ties" event regardless of whether the target country is an AI player
country_event = {
	id = utopia.2551
	title = "utopia.2551.name"
	desc = "utopia.2551.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution
	is_triggered_only = yes
	immediate = {
		set_country_flag = synthetic_empire
		if = {
			limit = { has_policy_flag = robots_outlawed }
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_policy_flag = ai_servitude
					has_policy_flag = ai_outlawed
				}
			}
			set_policy = {
				policy = artificial_intelligence_policy
				option = ai_full_rights
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					is_active_resolution = resolution_divinity_silence_the_soulless
					is_active_resolution = resolution_divinity_a_defined_purpose
				}
			}
			owner = {
				set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
			}
		}

		give_technology = {
			tech = tech_bio_reactor
			message = no
		}

		create_species = {
			is_mod = yes
			name = this
			namelist = this
			plural = this
			class = ROBOT
			homeworld = root.species
			portrait = default_robot
			traits = {
				trait = trait_mechanical
			}
			effect = {
				if = { limit = { has_synthethic_dawn = yes }
					prev = {
						switch = {
							trigger = is_species_class
							HUM = { prev = { change_species_characteristics = { portrait = "sd_hum_robot" } } }
							MAM = { prev = { change_species_characteristics = { portrait = "sd_mam_robot" } } }
							REP = { prev = { change_species_characteristics = { portrait = "sd_rep_robot" } } }
							AVI = { prev = { change_species_characteristics = { portrait = "sd_avi_robot" } } }
							ART = { prev = { change_species_characteristics = { portrait = "sd_art_robot" } } }
							MOL = { prev = { change_species_characteristics = { portrait = "sd_mol_robot" } } }
							FUN = { prev = { change_species_characteristics = { portrait = "sd_fun_robot" } } }
							PLANT = { prev = { change_species_characteristics = { portrait = "sd_pla_robot" } } }
							LITHOID = { prev = { change_species_characteristics = { portrait = "lith_machine" } } }
							NECROID = { prev = { change_species_characteristics = { portrait = "nec_machine" } } }
							AQUATIC = { prev = { change_species_characteristics = { portrait = "aqu_machine" } } }
							TOX = { prev = { change_species_characteristics = { portrait = "tox_machine" } } }
						}
					}
				}
				rename_species = {
					prompt_country = root # If targeted country is a player they will get a popup asking for a name/plural/adjective combo. Otherwise the species will get a random name from the specified name_list
					name_list = ascension_list
				}
				save_event_target_as = new_robotic_species
			}
		}
		every_owned_pop = {
			limit = {
				is_being_purged = no
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}
		every_controlled_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}
		every_owned_army = {
			limit = {
				exists = species
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = assault_army
			}
			modify_army = {
				name = random
				type = robotic_army
				species = event_target:new_robotic_species
			}
		}
		every_owned_army = {
			limit = {
				exists = species
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = defense_army
			}
			modify_army = {
				name = random
				type = robotic_defense_army
				species = event_target:new_robotic_species
			}
		}
		every_owned_leader = {
			limit = {
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_pool_leader = {
			limit = {
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_envoy = {
			limit = {
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		change_dominant_species = { species = event_target:new_robotic_species }
		every_owned_leader = {
			limit = {
				is_robotic_species = yes
				NOR = {
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
					has_trait = leader_trait_ruler_synthetic
				}
			}
			switch = {
				trigger = leader_class
				admiral = {
					add_trait = leader_trait_admiral_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				general = {
					add_trait = leader_trait_general_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				governor = {
					add_trait = leader_trait_governor_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				scientist = {
					add_trait = leader_trait_scientist_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				ruler = {
					add_trait = leader_trait_ruler_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
			}
		}
		every_pool_leader = {
			limit = {
				is_robotic_species = yes
				NOR = {
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
					has_trait = leader_trait_ruler_synthetic
				}
			}
			switch = {
				trigger = leader_class
				admiral = {
					add_trait = leader_trait_admiral_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				general = {
					add_trait = leader_trait_general_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				governor = {
					add_trait = leader_trait_governor_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				scientist = {
					add_trait = leader_trait_scientist_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
				ruler = {
					add_trait = leader_trait_ruler_synthetic
					add_ruler_trait = leader_trait_ruler_synthetic
				}
			}
		}

		observer_event = {
			id = observer.4
		}
		every_country = {
			limit = {
				NOT = { is_same_value = root }
				has_communications = root
			}
			if = {
				limit = { is_ai = no }
				country_event = {
					id = utopia.2555
					days = 5
				}
				country_event = {
					id = utopia.2556
					days = 10
				}
			}
			country_event = {
				id = civic_organic_zealots.2554
				days = 5
			}
		}
		if = {
			limit = {
				any_country = {
					is_fallen_empire_spiritualist = yes
					has_communications = root
					NOT = { is_same_value = root }
				}
			}
			random_country = {
				limit = {
					is_fallen_empire_spiritualist = yes
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = {
					id = utopia.2557
					days = 15
				}
			}
		}
		else = {
			random_country = {
				limit = {
					is_country_type = default
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = {
					id = utopia.2557
					days = 15
				}
			}
		}
		root = { set_country_flag = synth_assimilation }
	}
	option = {
		name = "utopia.2551.a"
		if = {
			limit = { is_homicidal = no }
			custom_tooltip = "SYNTH_ASSIMILATION_CITIZENSHIP_ENABLED"
		}
	}
}

# Modified:
# * use triggers
# * organic zealots get the same message as spiritualists
# * any branch offices in the recipient owned by the synthetic country are closed
# root = country (notified)
# from = country (synthetic)
country_event = {
	id = utopia.2555
	title = utopia.2550.name
	desc = {
		text = utopia.2555.1.desc
		trigger = {
			is_spiritualist = no
			is_organic_zealots = no
		}
	}
	desc = {
		text = utopia.2555.2.desc
		trigger = {
			OR = {
				is_spiritualist = yes
				is_organic_zealots = yes
			}
		}
	}
	picture = GFX_evt_cybernetics
	show_sound = event_synthetic_evolution
	is_triggered_only = yes
	option = {
		name = "utopia.2555.a"
		trigger = {
			is_spiritualist = no
			is_organic_zealots = no
		}
	}
	option = {
		name = "utopia.2555.b"
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
				has_civic = civic_organic_zealots
			}
		}
	}
	after = {
		if = {
			limit = {
				from = { has_corporate_government = yes }
				any_owned_planet = { has_branch_office = from }
				is_organic_zealots = yes
			}
			every_owned_planet = {
				limit = { has_branch_office = from }
				close_branch_office = yes
				owner = { add_resource = { energy = 1000 } }
			}
			from = {
				country_event = {
					id = civic_organic_zealots.2555
				}
			}
		}
		if = {
			limit = { has_secret_fealty_with = from }
			remove_secret_fealty = from
		}
		end_all_treaties_with = from
	}
}

# Modified:
# * use triggers
# * organic zealots get the same message as countries already at war with the synthetic empire
# root = country (notified)
# from = country (synthetic)
country_event = {
	id = utopia.2556
	title = TRANSMISSION
	desc = "utopia.2556.desc"
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		portrait = from
		room = from.ruler
	}
	option = {
		name = "utopia.2556.a"
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}
			is_organic_zealots = no
			NOT = { is_at_war_with = from }
		}
	}
	option = {
		name = "utopia.2556.b"
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
			is_organic_zealots = no
			NOT = { is_at_war_with = from }
		}
	}
	option = {
		name = "utopia.2556.c"
		trigger = {
			OR = {
				has_civic = civic_organic_zealots
				is_at_war_with = from
			}
		}
	}
	option = {
		name = "utopia.2556.d"
		trigger = {
			is_materialist = no
			is_spiritualist = no
			is_organic_zealots = no
			NOT = { is_at_war_with = from }
		}
	}
}