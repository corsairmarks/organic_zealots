namespace = first_contact

# First Contact Stage 1
# Modified:
# * use triggers
# * simplify logical expressions with De Morgan's Theorem
# * add description for organic zealots
first_contact_event = {
	id = first_contact.1
	title = first_contact_start_title
	desc = {
		trigger = {
			contact_country = { is_country_type = dragon_dummy }
			owner = { is_gestalt = no }
		}
		text = "aquatic_events.250.desc"
	}
	desc = {
		trigger = {
			contact_country = { is_country_type = dragon_dummy }
			owner = { is_hive_empire = yes }
		}
		text = "aquatic_events.250.desc.hive"
	}
	desc = {
		trigger = {
			contact_country = { is_country_type = dragon_dummy }
			owner = { is_machine_empire = yes }
		}
		text = "aquatic_events.250.desc.machine"
	}
	desc = {
		trigger = {
			owner = {
				is_gestalt = no
				is_xenophobe = no
				OR = {
					is_militarist = no
					is_xenophile = yes
				}
			}
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.default"
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					is_xenophobe = yes
					AND = {
						is_militarist = yes
						is_xenophile = no
					}
				}
				is_homicidal = no
			}
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.xenophobe"
	}
	desc = {
		trigger = {
			owner = { has_valid_civic = civic_machine_terminator }
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.terminator"
	}
	desc = {
		trigger = {
			owner = { has_valid_civic = civic_hive_devouring_swarm }
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.devourer"
	}
	desc = {
		trigger = {
			owner = { has_valid_civic = civic_fanatic_purifiers }
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.purifier"
	}
	desc = {
		trigger = {
			owner = { is_valid_organic_zealots = yes }
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.organic_zealots"
	}
	desc = {
		trigger = {
			owner = {
				is_hive_empire = yes
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
			}
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.hive"
	}
	desc = {
		trigger = {
			owner = {
				is_machine_empire = yes
				NOT = { has_valid_civic = civic_machine_terminator }
			}
			NOT = { contact_country = { is_country_type = dragon_dummy } }
		}
		text = "first_contact.1.desc.machine"
	}
	picture = GFX_evt_star_chart
	is_triggered_only = yes
	first_contact = yes
	location = solar_system
	show_sound = event_mysterious_signal
	abort_trigger = {
		OR = {
			NOT = { exists = owner }
			NOT = { exists = contact_country }
			owner = { has_communications = root.contact_country }
		}
	}
	immediate = {
		# set_site_progress_locked = yes # deliberately commented out to stop the notification from showing; site is locked anyway by dint of having no envoy
		if = {
			limit = { contact_country = { is_country_type = dragon_dummy } }
			set_name = "first_contact_dragon"
			owner = {
				create_leader = { # just for locs
					class = scientist
					species = this
					effect = {
						save_event_target_as = needed_name
						exile_leader_as = needed_name
					}
				}
			}
		}
	}
	after = {
		# set_site_progress_locked = no
		hidden_effect = {
			fire_on_action = {
				on_action = on_first_contact_started
			}
		}
	}
	# something here?
	option = {
		name = INTERESTING
		set_first_contact_starting_stage = yes
	}
}

# First contact: default/hive meet machines
# Modified:
# * custom descriptions for organic zealots
# * custom options for organic zealots
# * enable the existing devouring swarm special text by using is_machine_empire instead of is_gestalt in option B/C
first_contact_event = {
	id = first_contact.104
	title = first_contact.104.name
	desc = {
		trigger = {
			owner = { is_organic_zealots = no }
			NOT = { exists = event_target:secondary_species }
		}
		text = "first_contact.104.desc.terminator_or_default"
	}
	desc = {
		trigger = {
			owner = { is_organic_zealots = no }
			exists = event_target:secondary_species
			contact_country = { has_valid_civic = civic_machine_servitor }
		}
		text = "first_contact.104.desc.servitor"
	}
	desc = {
		trigger = {
			owner = {
				is_hive_empire = no
				is_organic_zealots = no
			}
			exists = event_target:secondary_species
			contact_country = { has_valid_civic = civic_machine_assimilator }
		}
		text = "first_contact.104.desc.assimilator.regular"
	}
	desc = {
		trigger = {
			owner = { is_hive_empire = yes }
			exists = event_target:secondary_species
			contact_country = { has_valid_civic = civic_machine_assimilator }
		}
		text = "first_contact.104.desc.assimilator.hive"
	}
	desc = {
		trigger = {
			owner = { is_organic_zealots = yes }
			NOT = { exists = event_target:secondary_species }
		}
		text = "first_contact.104.desc.organic_zealots.terminator_or_default"
	}
	desc = {
		trigger = {
			owner = { is_organic_zealots = yes }
			exists = event_target:secondary_species
			contact_country = { has_valid_civic = civic_machine_servitor }
		}
		text = "first_contact.104.desc.organic_zealots.servitor"
	}
	desc = {
		trigger = {
			owner = {
				is_hive_empire = no
				is_organic_zealots = yes
			}
			exists = event_target:secondary_species
			contact_country = { has_valid_civic = civic_machine_assimilator }
		}
		text = "first_contact.104.desc.organic_zealots.assimilator"
	}
	picture = GFX_evt_robot_encounter
	show_sound = event_robot_encounter
	is_triggered_only = yes
	first_contact = yes
	immediate = {
		set_site_progress_locked = yes
		contact_country = {
			random_owned_species = {
				limit = {
					OR = {
						has_citizenship_type = {
							type = citizenship_organic_trophy
							country = prev
						}
						has_trait = trait_cybernetic
					}
				}
				save_event_target_as = secondary_species
			}
		}
	}
	after = {
		owner = { 
			if = {
				limit = {
					OR = {
						is_homicidal = yes
						is_spiritualist = yes
					}
					is_machine_empire = no
					NOT = { has_country_flag = met_machine_empire }
				}
				add_monthly_resource_mult = {
					resource = unity
					value = @tier3unityreward
					min = @tier3unitymin
					max = @tier3unitymax
				}
			}
			set_country_flag = met_machine_empire
		}
		set_site_progress_locked = no
		finish_first_contact_effect = yes
		first_contact_inform_intel = yes
	}
	option = {
		name = "first_contact.104.A"
		trigger = {
			owner = {
				is_gestalt = no
				is_homicidal = no
				NOT = { has_country_flag = met_machine_empire }
			}
		}
		allow = { owner = { is_spiritualist = no } }
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
	option = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
				is_valid_organic_zealots = no
			}
		}
		name = "first_contact.104.B1"
	}
	option = {
		trigger = { owner = { has_valid_civic = civic_fanatic_purifiers } }
		name = "first_contact.104.B2"
	}
	option = {
		trigger = { owner = { has_valid_civic = civic_hive_devouring_swarm } }
		name = "first_contact.104.B3"
	}
	option = {
		trigger = { owner = { has_civic = civic_organic_zealots } }
		name = "first_contact.104.B4"
	}
	option = {
		name = ON_SCREEN
		trigger = {
			owner = {
				OR = {
					has_authority = auth_machine_intelligence
					has_country_flag = met_machine_empire
				}
			}
		}
	}
}